#!/usr/bin/env bash

cd $(dirname $(realpath $0))
source modules/common

conky_gpu_core() {
    local OPTIND=1
    local arg x y width height color
    color=$PRIMARY

    while getopts 'x:y:w:h:' arg
    do
        case ${arg} in
            x) x=${OPTARG};;
            y) y=${OPTARG};;
            w) width=${OPTARG};;
            h) height=${OPTARG};;
            *) return 1 # illegal option
        esac
    done

    conky_frame -x $x -y $y -w $width -h $height -c $color

    local spacing=0
    local graph_y=$((y + text_height))
    local graph_width=$(( (width - 3*spacing)/2 ))
    local graph_height=$((height - 2*text_height))

    conky_element -e "Frequency" -x $x -y $((y + text_offset)) -w $width -a

    conky_graph -g "nvidiagraph gpufreq"                                \
                -x $((x + spacing)) -y $graph_y                         \
                -w $graph_width -h $graph_height                        \
                -c $color

    conky_graph -g "nvidiagraph memfreq"                                \
                -x $((x + graph_width + 2*spacing)) -y $graph_y         \
                -w $graph_width -h $graph_height                        \
                -c $BLUE

    conky_frame -x $((x + graph_width + 2*spacing)) -y $graph_y         \
                -w $graph_width -h $graph_height                        \
                -c $color

    conky_element -e "Graphics clock: \${nvidia gpufreq} MHz"           \
                  -x $((x + 10))                                        \
                  -y $((y + height - text_height + text_offset))        \
                  -c $color

    conky_element -e "Memory clock: \${nvidia memfreq} MHz"             \
                  -x $((x + width - 165))                               \
                  -y $((y + height - text_height + text_offset))        \
                  -c $BLUE
}
conky_gpu_mem() {
    local OPTIND=1
    local arg x y width height color
    color=$PRIMARY

    while getopts 'x:y:w:h:' arg
    do
        case ${arg} in
            x) x=${OPTARG};;
            y) y=${OPTARG};;
            w) width=${OPTARG};;
            h) height=${OPTARG};;
            *) return 1 # illegal option
        esac
    done

    local bar_height=$((height - 2*text_height))

    conky_frame -x $x -y $y -w $width -h $height -c $color

    conky_element -e "\${nvidiabar $bar_height,$width memutil}"         \
                  -x $x -y $((y + text_height-10))                      \
                  -c $color

    conky_element -e "Video memory"                                     \
                  -x $x -y $((y + text_offset))                         \
                  -w $width -a

    conky_element -e "Used: \${nvidia memused} MB"                      \
                  -x $((x + 10))                                        \
                  -y $((y + height - text_height + text_offset))        \
                  -c $color

    conky_element -e "Available: \${nvidia memfree} MB"                 \
                  -x $((x + width - 130))                               \
                  -y $((y + height - text_height + text_offset))

}

conky_gpu_thermals() {
    local OPTIND=1
    local arg x y width height color
    color=$PRIMARY

    while getopts 'x:y:w:h:' arg
    do
        case ${arg} in
            x) x=${OPTARG};;
            y) y=${OPTARG};;
            w) width=${OPTARG};;
            h) height=${OPTARG};;
            *) return 1 # illegal option
        esac
    done

    local graph_height=$((height - 2*text_height))

    conky_frame -x $x -y $y -w $width -h $height -c $color

    conky_element -e "Thermals"                                     \
                  -x $x -y $((y + text_offset))                     \
                  -w $width -a

    conky_graph -g "nvidiagraph gputemp"                            \
                -x $x                                               \
                -y $((y + text_height))                             \
                -w $width -h $graph_height                          \
                -c $BLUE

    conky_graph -g "nvidiagraph fanlevel"                           \
                -x $x                                               \
                -y $((y + text_height))                             \
                -w $width -h $graph_height                          \
                -c $color

    conky_element -e "Fan speed: \${nvidia fanspeed} RPM"           \
                  -x $((x + 10))                                    \
                  -y $((y + height - text_height + text_offset))    \
                  -c $color

    conky_element -e "Temperature: \${nvidia gputemp} Â°C"           \
                  -x $((x + width - 140))                           \
                  -y $((y + height - text_height + text_offset))    \
                  -c $BLUE
}
conky_gpu() {
    local OPTIND=1
    local arg x y width height text color num_cores
    color=$PRIMARY

    while getopts 'x:y:w:h:t:c:n:' arg
    do
        case ${arg} in
            x) x=${OPTARG};;
            y) y=${OPTARG};;
            w) width=${OPTARG};;
            h) height=${OPTARG};;
            t) text=${OPTARG};;
            c) color=${OPTARG};;
            n) num_cores=${OPTARG};;
            *) return 1 # illegal option
        esac
    done
    
    local subframe_spacing=10
    local subframe_width=$((width - 2*subframe_spacing))
    local subframe_total_height=$(( (height - 4*subframe_spacing - text_height)))
    local memory_height=$((2*text_height + 20))
    local frequency_height=$(( (subframe_total_height - memory_height)/2 ))
    local thermals_height=$(( (subframe_total_height - memory_height)/2 ))
    local subframe_x=$((x + subframe_spacing))
    local subframe_y=$((y + text_height))


    local graph_height=$((subframe_height - text_height))

    conky_frame -x $x -y $y -w $width -h $height -c $color
    
    conky_element -e "\${nvidia modelname 0}"   \
                  -x $((x + width/2 - 90))      \
                  -y $((y + text_offset))

    conky_gpu_core -x $subframe_x -y $subframe_y \
                   -w $subframe_width -h $frequency_height

    subframe_y=$((subframe_y + frequency_height + subframe_spacing))

    conky_gpu_mem -x $subframe_x -y $subframe_y \
                  -w $subframe_width -h $memory_height

    subframe_y=$((subframe_y + memory_height + subframe_spacing))

    conky_gpu_thermals -x $subframe_x -y $subframe_y \
                       -w $subframe_width -h $thermals_height
}
